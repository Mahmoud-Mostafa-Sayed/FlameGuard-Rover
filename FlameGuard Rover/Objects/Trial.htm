<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html><head>
<title>Static Call Graph - [.\Objects\Trial.axf]</title></head>
<body><HR>
<H1>Static Call Graph for image .\Objects\Trial.axf</H1><HR>
<BR><P>#&#060CALLGRAPH&#062# ARM Linker, 6230001: Last Updated: Fri Jun 20 16:28:07 2025
<BR><P>
<H3>Maximum Stack Usage =         32 bytes + Unknown(Functions without stacksize, Cycles, Untraceable Function Pointers)</H3><H3>
Call chain for Maximum Stack Depth:</H3>
SystemInit &rArr; SetSysClock &rArr; SetSysClockTo72
<P>
<H3>
Functions with no stack information
</H3><UL>
 <LI><a href="#[73]">__user_initial_stackheap</a>
 <LI><a href="#[7f]">MOVE_FORWARD</a>
 <LI><a href="#[81]">MOVE_RIGHT</a>
 <LI><a href="#[80]">MOVE_LEFT</a>
 <LI><a href="#[82]">MOVE_BACKWARD</a>
 <LI><a href="#[7a]">STOP_CAR</a>
 <LI><a href="#[83]">delay_1_second</a>
 <LI><a href="#[7d]">DELAY_10SEC</a>
 <LI><a href="#[94]">TURN_ON_PUMP</a>
 <LI><a href="#[95]">TURN_OFF_PUMP</a>
 <LI><a href="#[7e]">Bluetooth_ReceiveLoop</a>
 <LI><a href="#[76]">GPIOA_INIT</a>
 <LI><a href="#[8a]">SETUP2</a>
 <LI><a href="#[7b]">Angry_face</a>
 <LI><a href="#[79]">Smiley_face</a>
 <LI><a href="#[78]">SETUP3</a>
 <LI><a href="#[37]">Number0</a>
 <LI><a href="#[38]">Number1</a>
 <LI><a href="#[39]">Number2</a>
 <LI><a href="#[3a]">Number3</a>
 <LI><a href="#[3b]">Number4</a>
 <LI><a href="#[3c]">Number5</a>
 <LI><a href="#[3d]">Number6</a>
 <LI><a href="#[3e]">Number7</a>
 <LI><a href="#[3f]">Number8</a>
 <LI><a href="#[40]">Number9</a>
 <LI><a href="#[41]">Letter_A</a>
 <LI><a href="#[42]">Letter_B</a>
 <LI><a href="#[43]">Letter_C</a>
 <LI><a href="#[44]">Letter_D</a>
 <LI><a href="#[45]">Letter_E</a>
 <LI><a href="#[46]">Letter_F</a>
 <LI><a href="#[47]">Letter_G</a>
 <LI><a href="#[48]">Letter_H</a>
 <LI><a href="#[49]">Letter_I</a>
 <LI><a href="#[4a]">Letter_J</a>
 <LI><a href="#[4b]">Letter_K</a>
 <LI><a href="#[4c]">Letter_L</a>
 <LI><a href="#[4d]">Letter_M</a>
 <LI><a href="#[4e]">Letter_N</a>
 <LI><a href="#[4f]">Letter_O</a>
 <LI><a href="#[50]">Letter_P</a>
 <LI><a href="#[51]">Letter_Q</a>
 <LI><a href="#[52]">Letter_R</a>
 <LI><a href="#[53]">Letter_S</a>
 <LI><a href="#[54]">Letter_T</a>
 <LI><a href="#[55]">Number0</a>
 <LI><a href="#[56]">Number1</a>
 <LI><a href="#[57]">Number2</a>
 <LI><a href="#[58]">Number3</a>
 <LI><a href="#[59]">Number4</a>
 <LI><a href="#[5a]">Number5</a>
 <LI><a href="#[5b]">Number6</a>
 <LI><a href="#[5c]">Number7</a>
 <LI><a href="#[5d]">Number8</a>
 <LI><a href="#[5e]">Number9</a>
 <LI><a href="#[5f]">Letter_A</a>
 <LI><a href="#[60]">Letter_B</a>
 <LI><a href="#[61]">Letter_C</a>
 <LI><a href="#[62]">Letter_D</a>
 <LI><a href="#[63]">Letter_E</a>
 <LI><a href="#[64]">Letter_F</a>
 <LI><a href="#[65]">Letter_G</a>
 <LI><a href="#[66]">Letter_H</a>
 <LI><a href="#[67]">Letter_I</a>
 <LI><a href="#[68]">Letter_J</a>
 <LI><a href="#[69]">Letter_K</a>
 <LI><a href="#[6a]">Letter_L</a>
 <LI><a href="#[6b]">Letter_M</a>
 <LI><a href="#[6c]">Letter_N</a>
 <LI><a href="#[6d]">Letter_O</a>
 <LI><a href="#[6e]">Letter_P</a>
 <LI><a href="#[6f]">Letter_Q</a>
 <LI><a href="#[70]">Letter_R</a>
 <LI><a href="#[71]">Letter_S</a>
 <LI><a href="#[72]">Letter_T</a>
</UL>
</UL>
<P>
<H3>
Mutually Recursive functions
</H3> <LI><a href="#[1]">NMI_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[1]">NMI_Handler</a><BR>
 <LI><a href="#[2]">HardFault_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[2]">HardFault_Handler</a><BR>
 <LI><a href="#[3]">MemManage_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[3]">MemManage_Handler</a><BR>
 <LI><a href="#[4]">BusFault_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[4]">BusFault_Handler</a><BR>
 <LI><a href="#[5]">UsageFault_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[5]">UsageFault_Handler</a><BR>
 <LI><a href="#[6]">SVC_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[6]">SVC_Handler</a><BR>
 <LI><a href="#[7]">DebugMon_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[7]">DebugMon_Handler</a><BR>
 <LI><a href="#[8]">PendSV_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[8]">PendSV_Handler</a><BR>
 <LI><a href="#[9]">SysTick_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[9]">SysTick_Handler</a><BR>
 <LI><a href="#[1c]">ADC1_2_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[1c]">ADC1_2_IRQHandler</a><BR>
 <LI><a href="#[8b]">clearMultiBits</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[8b]">clearMultiBits</a><BR>
</UL>
<P>
<H3>
Function Pointers
</H3><UL>
 <LI><a href="#[1c]">ADC1_2_IRQHandler</a> from startup_stm32f10x_md.o(.text) referenced from startup_stm32f10x_md.o(RESET)
 <LI><a href="#[4]">BusFault_Handler</a> from startup_stm32f10x_md.o(.text) referenced from startup_stm32f10x_md.o(RESET)
 <LI><a href="#[1f]">CAN1_RX1_IRQHandler</a> from startup_stm32f10x_md.o(.text) referenced from startup_stm32f10x_md.o(RESET)
 <LI><a href="#[20]">CAN1_SCE_IRQHandler</a> from startup_stm32f10x_md.o(.text) referenced from startup_stm32f10x_md.o(RESET)
 <LI><a href="#[15]">DMA1_Channel1_IRQHandler</a> from startup_stm32f10x_md.o(.text) referenced from startup_stm32f10x_md.o(RESET)
 <LI><a href="#[16]">DMA1_Channel2_IRQHandler</a> from startup_stm32f10x_md.o(.text) referenced from startup_stm32f10x_md.o(RESET)
 <LI><a href="#[17]">DMA1_Channel3_IRQHandler</a> from startup_stm32f10x_md.o(.text) referenced from startup_stm32f10x_md.o(RESET)
 <LI><a href="#[18]">DMA1_Channel4_IRQHandler</a> from startup_stm32f10x_md.o(.text) referenced from startup_stm32f10x_md.o(RESET)
 <LI><a href="#[19]">DMA1_Channel5_IRQHandler</a> from startup_stm32f10x_md.o(.text) referenced from startup_stm32f10x_md.o(RESET)
 <LI><a href="#[1a]">DMA1_Channel6_IRQHandler</a> from startup_stm32f10x_md.o(.text) referenced from startup_stm32f10x_md.o(RESET)
 <LI><a href="#[1b]">DMA1_Channel7_IRQHandler</a> from startup_stm32f10x_md.o(.text) referenced from startup_stm32f10x_md.o(RESET)
 <LI><a href="#[7]">DebugMon_Handler</a> from startup_stm32f10x_md.o(.text) referenced from startup_stm32f10x_md.o(RESET)
 <LI><a href="#[10]">EXTI0_IRQHandler</a> from startup_stm32f10x_md.o(.text) referenced from startup_stm32f10x_md.o(RESET)
 <LI><a href="#[32]">EXTI15_10_IRQHandler</a> from startup_stm32f10x_md.o(.text) referenced from startup_stm32f10x_md.o(RESET)
 <LI><a href="#[11]">EXTI1_IRQHandler</a> from startup_stm32f10x_md.o(.text) referenced from startup_stm32f10x_md.o(RESET)
 <LI><a href="#[12]">EXTI2_IRQHandler</a> from startup_stm32f10x_md.o(.text) referenced from startup_stm32f10x_md.o(RESET)
 <LI><a href="#[13]">EXTI3_IRQHandler</a> from startup_stm32f10x_md.o(.text) referenced from startup_stm32f10x_md.o(RESET)
 <LI><a href="#[14]">EXTI4_IRQHandler</a> from startup_stm32f10x_md.o(.text) referenced from startup_stm32f10x_md.o(RESET)
 <LI><a href="#[21]">EXTI9_5_IRQHandler</a> from startup_stm32f10x_md.o(.text) referenced from startup_stm32f10x_md.o(RESET)
 <LI><a href="#[e]">FLASH_IRQHandler</a> from startup_stm32f10x_md.o(.text) referenced from startup_stm32f10x_md.o(RESET)
 <LI><a href="#[2]">HardFault_Handler</a> from startup_stm32f10x_md.o(.text) referenced from startup_stm32f10x_md.o(RESET)
 <LI><a href="#[2a]">I2C1_ER_IRQHandler</a> from startup_stm32f10x_md.o(.text) referenced from startup_stm32f10x_md.o(RESET)
 <LI><a href="#[29]">I2C1_EV_IRQHandler</a> from startup_stm32f10x_md.o(.text) referenced from startup_stm32f10x_md.o(RESET)
 <LI><a href="#[2c]">I2C2_ER_IRQHandler</a> from startup_stm32f10x_md.o(.text) referenced from startup_stm32f10x_md.o(RESET)
 <LI><a href="#[2b]">I2C2_EV_IRQHandler</a> from startup_stm32f10x_md.o(.text) referenced from startup_stm32f10x_md.o(RESET)
 <LI><a href="#[41]">Letter_A</a> from faces.o(MyCode) referenced 2 times from faces.o(MyCode)
 <LI><a href="#[42]">Letter_B</a> from faces.o(MyCode) referenced 2 times from faces.o(MyCode)
 <LI><a href="#[43]">Letter_C</a> from faces.o(MyCode) referenced 2 times from faces.o(MyCode)
 <LI><a href="#[44]">Letter_D</a> from faces.o(MyCode) referenced 2 times from faces.o(MyCode)
 <LI><a href="#[45]">Letter_E</a> from faces.o(MyCode) referenced 2 times from faces.o(MyCode)
 <LI><a href="#[46]">Letter_F</a> from faces.o(MyCode) referenced 2 times from faces.o(MyCode)
 <LI><a href="#[47]">Letter_G</a> from faces.o(MyCode) referenced 2 times from faces.o(MyCode)
 <LI><a href="#[48]">Letter_H</a> from faces.o(MyCode) referenced 2 times from faces.o(MyCode)
 <LI><a href="#[49]">Letter_I</a> from faces.o(MyCode) referenced 2 times from faces.o(MyCode)
 <LI><a href="#[4a]">Letter_J</a> from faces.o(MyCode) referenced 2 times from faces.o(MyCode)
 <LI><a href="#[4b]">Letter_K</a> from faces.o(MyCode) referenced 2 times from faces.o(MyCode)
 <LI><a href="#[4c]">Letter_L</a> from faces.o(MyCode) referenced 2 times from faces.o(MyCode)
 <LI><a href="#[4d]">Letter_M</a> from faces.o(MyCode) referenced 2 times from faces.o(MyCode)
 <LI><a href="#[4e]">Letter_N</a> from faces.o(MyCode) referenced 2 times from faces.o(MyCode)
 <LI><a href="#[4f]">Letter_O</a> from faces.o(MyCode) referenced 2 times from faces.o(MyCode)
 <LI><a href="#[50]">Letter_P</a> from faces.o(MyCode) referenced 2 times from faces.o(MyCode)
 <LI><a href="#[51]">Letter_Q</a> from faces.o(MyCode) referenced 2 times from faces.o(MyCode)
 <LI><a href="#[52]">Letter_R</a> from faces.o(MyCode) referenced 2 times from faces.o(MyCode)
 <LI><a href="#[53]">Letter_S</a> from faces.o(MyCode) referenced 2 times from faces.o(MyCode)
 <LI><a href="#[54]">Letter_T</a> from faces.o(MyCode) referenced 2 times from faces.o(MyCode)
 <LI><a href="#[3]">MemManage_Handler</a> from startup_stm32f10x_md.o(.text) referenced from startup_stm32f10x_md.o(RESET)
 <LI><a href="#[1]">NMI_Handler</a> from startup_stm32f10x_md.o(.text) referenced from startup_stm32f10x_md.o(RESET)
 <LI><a href="#[37]">Number0</a> from faces.o(MyCode) referenced 2 times from faces.o(MyCode)
 <LI><a href="#[38]">Number1</a> from faces.o(MyCode) referenced 2 times from faces.o(MyCode)
 <LI><a href="#[39]">Number2</a> from faces.o(MyCode) referenced 2 times from faces.o(MyCode)
 <LI><a href="#[3a]">Number3</a> from faces.o(MyCode) referenced 2 times from faces.o(MyCode)
 <LI><a href="#[3b]">Number4</a> from faces.o(MyCode) referenced 2 times from faces.o(MyCode)
 <LI><a href="#[3c]">Number5</a> from faces.o(MyCode) referenced 2 times from faces.o(MyCode)
 <LI><a href="#[3d]">Number6</a> from faces.o(MyCode) referenced 2 times from faces.o(MyCode)
 <LI><a href="#[3e]">Number7</a> from faces.o(MyCode) referenced 2 times from faces.o(MyCode)
 <LI><a href="#[3f]">Number8</a> from faces.o(MyCode) referenced 2 times from faces.o(MyCode)
 <LI><a href="#[40]">Number9</a> from faces.o(MyCode) referenced 2 times from faces.o(MyCode)
 <LI><a href="#[b]">PVD_IRQHandler</a> from startup_stm32f10x_md.o(.text) referenced from startup_stm32f10x_md.o(RESET)
 <LI><a href="#[8]">PendSV_Handler</a> from startup_stm32f10x_md.o(.text) referenced from startup_stm32f10x_md.o(RESET)
 <LI><a href="#[f]">RCC_IRQHandler</a> from startup_stm32f10x_md.o(.text) referenced from startup_stm32f10x_md.o(RESET)
 <LI><a href="#[33]">RTCAlarm_IRQHandler</a> from startup_stm32f10x_md.o(.text) referenced from startup_stm32f10x_md.o(RESET)
 <LI><a href="#[d]">RTC_IRQHandler</a> from startup_stm32f10x_md.o(.text) referenced from startup_stm32f10x_md.o(RESET)
 <LI><a href="#[0]">Reset_Handler</a> from startup_stm32f10x_md.o(.text) referenced from startup_stm32f10x_md.o(RESET)
 <LI><a href="#[2d]">SPI1_IRQHandler</a> from startup_stm32f10x_md.o(.text) referenced from startup_stm32f10x_md.o(RESET)
 <LI><a href="#[2e]">SPI2_IRQHandler</a> from startup_stm32f10x_md.o(.text) referenced from startup_stm32f10x_md.o(RESET)
 <LI><a href="#[6]">SVC_Handler</a> from startup_stm32f10x_md.o(.text) referenced from startup_stm32f10x_md.o(RESET)
 <LI><a href="#[9]">SysTick_Handler</a> from startup_stm32f10x_md.o(.text) referenced from startup_stm32f10x_md.o(RESET)
 <LI><a href="#[35]">SystemInit</a> from system_stm32f10x.o(.text.SystemInit) referenced from startup_stm32f10x_md.o(.text)
 <LI><a href="#[c]">TAMPER_IRQHandler</a> from startup_stm32f10x_md.o(.text) referenced from startup_stm32f10x_md.o(RESET)
 <LI><a href="#[22]">TIM1_BRK_IRQHandler</a> from startup_stm32f10x_md.o(.text) referenced from startup_stm32f10x_md.o(RESET)
 <LI><a href="#[25]">TIM1_CC_IRQHandler</a> from startup_stm32f10x_md.o(.text) referenced from startup_stm32f10x_md.o(RESET)
 <LI><a href="#[24]">TIM1_TRG_COM_IRQHandler</a> from startup_stm32f10x_md.o(.text) referenced from startup_stm32f10x_md.o(RESET)
 <LI><a href="#[23]">TIM1_UP_IRQHandler</a> from startup_stm32f10x_md.o(.text) referenced from startup_stm32f10x_md.o(RESET)
 <LI><a href="#[26]">TIM2_IRQHandler</a> from startup_stm32f10x_md.o(.text) referenced from startup_stm32f10x_md.o(RESET)
 <LI><a href="#[27]">TIM3_IRQHandler</a> from startup_stm32f10x_md.o(.text) referenced from startup_stm32f10x_md.o(RESET)
 <LI><a href="#[28]">TIM4_IRQHandler</a> from startup_stm32f10x_md.o(.text) referenced from startup_stm32f10x_md.o(RESET)
 <LI><a href="#[2f]">USART1_IRQHandler</a> from startup_stm32f10x_md.o(.text) referenced from startup_stm32f10x_md.o(RESET)
 <LI><a href="#[30]">USART2_IRQHandler</a> from startup_stm32f10x_md.o(.text) referenced from startup_stm32f10x_md.o(RESET)
 <LI><a href="#[31]">USART3_IRQHandler</a> from startup_stm32f10x_md.o(.text) referenced from startup_stm32f10x_md.o(RESET)
 <LI><a href="#[34]">USBWakeUp_IRQHandler</a> from startup_stm32f10x_md.o(.text) referenced from startup_stm32f10x_md.o(RESET)
 <LI><a href="#[1d]">USB_HP_CAN1_TX_IRQHandler</a> from startup_stm32f10x_md.o(.text) referenced from startup_stm32f10x_md.o(RESET)
 <LI><a href="#[1e]">USB_LP_CAN1_RX0_IRQHandler</a> from startup_stm32f10x_md.o(.text) referenced from startup_stm32f10x_md.o(RESET)
 <LI><a href="#[5]">UsageFault_Handler</a> from startup_stm32f10x_md.o(.text) referenced from startup_stm32f10x_md.o(RESET)
 <LI><a href="#[a]">WWDG_IRQHandler</a> from startup_stm32f10x_md.o(.text) referenced from startup_stm32f10x_md.o(RESET)
 <LI><a href="#[36]">__main</a> from main.o(MA3LENA) referenced from startup_stm32f10x_md.o(.text)
</UL>
<P>
<H3>
Global Symbols
</H3>
<P><STRONG><a name="[0]"></a>Reset_Handler</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, startup_stm32f10x_md.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(RESET)
</UL>
<P><STRONG><a name="[1]"></a>NMI_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_stm32f10x_md.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NMI_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NMI_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(RESET)
</UL>
<P><STRONG><a name="[2]"></a>HardFault_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_stm32f10x_md.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HardFault_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HardFault_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(RESET)
</UL>
<P><STRONG><a name="[3]"></a>MemManage_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_stm32f10x_md.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MemManage_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MemManage_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(RESET)
</UL>
<P><STRONG><a name="[4]"></a>BusFault_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_stm32f10x_md.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BusFault_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BusFault_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(RESET)
</UL>
<P><STRONG><a name="[5]"></a>UsageFault_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_stm32f10x_md.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UsageFault_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UsageFault_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(RESET)
</UL>
<P><STRONG><a name="[6]"></a>SVC_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_stm32f10x_md.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SVC_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SVC_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(RESET)
</UL>
<P><STRONG><a name="[7]"></a>DebugMon_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_stm32f10x_md.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DebugMon_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DebugMon_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(RESET)
</UL>
<P><STRONG><a name="[8]"></a>PendSV_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_stm32f10x_md.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PendSV_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PendSV_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(RESET)
</UL>
<P><STRONG><a name="[9]"></a>SysTick_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_stm32f10x_md.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(RESET)
</UL>
<P><STRONG><a name="[1c]"></a>ADC1_2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_md.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC1_2_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC1_2_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(RESET)
</UL>
<P><STRONG><a name="[1f]"></a>CAN1_RX1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_md.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(RESET)
</UL>
<P><STRONG><a name="[20]"></a>CAN1_SCE_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_md.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(RESET)
</UL>
<P><STRONG><a name="[15]"></a>DMA1_Channel1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_md.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(RESET)
</UL>
<P><STRONG><a name="[16]"></a>DMA1_Channel2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_md.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(RESET)
</UL>
<P><STRONG><a name="[17]"></a>DMA1_Channel3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_md.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(RESET)
</UL>
<P><STRONG><a name="[18]"></a>DMA1_Channel4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_md.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(RESET)
</UL>
<P><STRONG><a name="[19]"></a>DMA1_Channel5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_md.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(RESET)
</UL>
<P><STRONG><a name="[1a]"></a>DMA1_Channel6_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_md.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(RESET)
</UL>
<P><STRONG><a name="[1b]"></a>DMA1_Channel7_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_md.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(RESET)
</UL>
<P><STRONG><a name="[10]"></a>EXTI0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_md.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(RESET)
</UL>
<P><STRONG><a name="[32]"></a>EXTI15_10_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_md.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(RESET)
</UL>
<P><STRONG><a name="[11]"></a>EXTI1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_md.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(RESET)
</UL>
<P><STRONG><a name="[12]"></a>EXTI2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_md.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(RESET)
</UL>
<P><STRONG><a name="[13]"></a>EXTI3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_md.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(RESET)
</UL>
<P><STRONG><a name="[14]"></a>EXTI4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_md.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(RESET)
</UL>
<P><STRONG><a name="[21]"></a>EXTI9_5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_md.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(RESET)
</UL>
<P><STRONG><a name="[e]"></a>FLASH_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_md.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(RESET)
</UL>
<P><STRONG><a name="[2a]"></a>I2C1_ER_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_md.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(RESET)
</UL>
<P><STRONG><a name="[29]"></a>I2C1_EV_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_md.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(RESET)
</UL>
<P><STRONG><a name="[2c]"></a>I2C2_ER_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_md.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(RESET)
</UL>
<P><STRONG><a name="[2b]"></a>I2C2_EV_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_md.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(RESET)
</UL>
<P><STRONG><a name="[b]"></a>PVD_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_md.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(RESET)
</UL>
<P><STRONG><a name="[f]"></a>RCC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_md.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(RESET)
</UL>
<P><STRONG><a name="[33]"></a>RTCAlarm_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_md.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(RESET)
</UL>
<P><STRONG><a name="[d]"></a>RTC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_md.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(RESET)
</UL>
<P><STRONG><a name="[2d]"></a>SPI1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_md.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(RESET)
</UL>
<P><STRONG><a name="[2e]"></a>SPI2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_md.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(RESET)
</UL>
<P><STRONG><a name="[c]"></a>TAMPER_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_md.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(RESET)
</UL>
<P><STRONG><a name="[22]"></a>TIM1_BRK_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_md.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(RESET)
</UL>
<P><STRONG><a name="[25]"></a>TIM1_CC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_md.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(RESET)
</UL>
<P><STRONG><a name="[24]"></a>TIM1_TRG_COM_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_md.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(RESET)
</UL>
<P><STRONG><a name="[23]"></a>TIM1_UP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_md.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(RESET)
</UL>
<P><STRONG><a name="[26]"></a>TIM2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_md.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(RESET)
</UL>
<P><STRONG><a name="[27]"></a>TIM3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_md.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(RESET)
</UL>
<P><STRONG><a name="[28]"></a>TIM4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_md.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(RESET)
</UL>
<P><STRONG><a name="[2f]"></a>USART1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_md.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(RESET)
</UL>
<P><STRONG><a name="[30]"></a>USART2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_md.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(RESET)
</UL>
<P><STRONG><a name="[31]"></a>USART3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_md.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(RESET)
</UL>
<P><STRONG><a name="[34]"></a>USBWakeUp_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_md.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(RESET)
</UL>
<P><STRONG><a name="[1d]"></a>USB_HP_CAN1_TX_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_md.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(RESET)
</UL>
<P><STRONG><a name="[1e]"></a>USB_LP_CAN1_RX0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_md.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(RESET)
</UL>
<P><STRONG><a name="[a]"></a>WWDG_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_md.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(RESET)
</UL>
<P><STRONG><a name="[73]"></a>__user_initial_stackheap</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, startup_stm32f10x_md.o(.text), UNUSED, KEPT)

<P><STRONG><a name="[91]"></a>__use_two_region_memory</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, heapauxi.o(.text), UNUSED)

<P><STRONG><a name="[92]"></a>__rt_heap_escrow$2region</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, heapauxi.o(.text), UNUSED)

<P><STRONG><a name="[93]"></a>__rt_heap_expand$2region</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, heapauxi.o(.text), UNUSED)

<P><STRONG><a name="[35]"></a>SystemInit</STRONG> (Thumb, 102 bytes, Stack size 8 bytes, system_stm32f10x.o(.text.SystemInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = SystemInit &rArr; SetSysClock &rArr; SetSysClockTo72
</UL>
<BR>[Calls]<UL><LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetSysClock
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(.text)
</UL>
<P><STRONG><a name="[36]"></a>__main</STRONG> (Thumb, 362 bytes, Stack size 0 bytes, main.o(MA3LENA))
<BR><BR>[Calls]<UL><LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_pwm
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Smiley_face
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STOP_CAR
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SET_PWM
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SETUP3
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MOVE_RIGHT
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MOVE_LEFT
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MOVE_FORWARD
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MOVE_BACKWARD
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOA_INIT
<LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DELAY_10SEC
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bluetooth_ReceiveLoop
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Angry_face
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(.text)
</UL>
<P><STRONG><a name="[7f]"></a>MOVE_FORWARD</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, motors.o(MyCode))
<BR><BR>[Called By]<UL><LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bluetooth_ReceiveLoop
<LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main
</UL>

<P><STRONG><a name="[81]"></a>MOVE_RIGHT</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, motors.o(MyCode))
<BR><BR>[Called By]<UL><LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bluetooth_ReceiveLoop
<LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main
</UL>

<P><STRONG><a name="[80]"></a>MOVE_LEFT</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, motors.o(MyCode))
<BR><BR>[Called By]<UL><LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bluetooth_ReceiveLoop
<LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main
</UL>

<P><STRONG><a name="[82]"></a>MOVE_BACKWARD</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, motors.o(MyCode))
<BR><BR>[Called By]<UL><LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bluetooth_ReceiveLoop
<LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main
</UL>

<P><STRONG><a name="[7a]"></a>STOP_CAR</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, motors.o(MyCode))
<BR><BR>[Called By]<UL><LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bluetooth_ReceiveLoop
<LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main
</UL>

<P><STRONG><a name="[83]"></a>delay_1_second</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, motors.o(MyCode))
<BR><BR>[Called By]<UL><LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DELAY_10SEC
</UL>

<P><STRONG><a name="[7d]"></a>DELAY_10SEC</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, motors.o(MyCode))
<BR><BR>[Calls]<UL><LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_1_second
</UL>
<BR>[Called By]<UL><LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main
</UL>

<P><STRONG><a name="[94]"></a>TURN_ON_PUMP</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, pump.o(MyCode), UNUSED)

<P><STRONG><a name="[95]"></a>TURN_OFF_PUMP</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, pump.o(MyCode), UNUSED)

<P><STRONG><a name="[7e]"></a>Bluetooth_ReceiveLoop</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, bluetooth module.o(MyCode))
<BR><BR>[Calls]<UL><LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STOP_CAR
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SET_PWM
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MOVE_RIGHT
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MOVE_LEFT
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MOVE_FORWARD
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MOVE_BACKWARD
</UL>
<BR>[Called By]<UL><LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main
</UL>

<P><STRONG><a name="[76]"></a>GPIOA_INIT</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, init.o(MyCode))
<BR><BR>[Called By]<UL><LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main
</UL>

<P><STRONG><a name="[7c]"></a>set_pwm</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, pwm.o(MyCode))
<BR><BR>[Called By]<UL><LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main
</UL>

<P><STRONG><a name="[77]"></a>SET_PWM</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, pwm.o(MyCode))
<BR><BR>[Called By]<UL><LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bluetooth_ReceiveLoop
<LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main
</UL>

<P><STRONG><a name="[8a]"></a>SETUP2</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, faces.o(MyCode), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clearMultiBits
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clearBit
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setMultiBits
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setBit
</UL>

<P><STRONG><a name="[7b]"></a>Angry_face</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, faces.o(MyCode))
<BR><BR>[Called By]<UL><LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main
</UL>

<P><STRONG><a name="[79]"></a>Smiley_face</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, faces.o(MyCode))
<BR><BR>[Called By]<UL><LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main
</UL>

<P><STRONG><a name="[78]"></a>SETUP3</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, tft_spi.o(MyCode))
<BR><BR>[Calls]<UL><LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clearMultiBits
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clearBit
<LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setMultiBits
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setBit
</UL>
<BR>[Called By]<UL><LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main
</UL>
<P>
<H3>
Local Symbols
</H3>
<P><STRONG><a name="[89]"></a>waitFlagSets</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, faces.o(MyCode), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clearMultiBits
</UL>

<P><STRONG><a name="[87]"></a>waitFlagClears</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, faces.o(MyCode), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clearMultiBits
</UL>

<P><STRONG><a name="[85]"></a>setBit</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, faces.o(MyCode), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SETUP2
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clearMultiBits
</UL>

<P><STRONG><a name="[86]"></a>setMultiBits</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, faces.o(MyCode), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SETUP2
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clearMultiBits
</UL>

<P><STRONG><a name="[88]"></a>clearBit</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, faces.o(MyCode), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SETUP2
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clearMultiBits
</UL>

<P><STRONG><a name="[84]"></a>clearMultiBits</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, faces.o(MyCode), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clearMultiBits
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clearBit
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setMultiBits
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setBit
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;waitFlagClears
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;waitFlagSets
</UL>
<BR>[Called By]<UL><LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SETUP2
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clearMultiBits
</UL>

<P><STRONG><a name="[37]"></a>Number0</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, faces.o(MyCode))
<BR>[Address Reference Count : 1]<UL><LI> faces.o(MyCode)
</UL>
<P><STRONG><a name="[38]"></a>Number1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, faces.o(MyCode))
<BR>[Address Reference Count : 1]<UL><LI> faces.o(MyCode)
</UL>
<P><STRONG><a name="[39]"></a>Number2</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, faces.o(MyCode))
<BR>[Address Reference Count : 1]<UL><LI> faces.o(MyCode)
</UL>
<P><STRONG><a name="[3a]"></a>Number3</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, faces.o(MyCode))
<BR>[Address Reference Count : 1]<UL><LI> faces.o(MyCode)
</UL>
<P><STRONG><a name="[3b]"></a>Number4</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, faces.o(MyCode))
<BR>[Address Reference Count : 1]<UL><LI> faces.o(MyCode)
</UL>
<P><STRONG><a name="[3c]"></a>Number5</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, faces.o(MyCode))
<BR>[Address Reference Count : 1]<UL><LI> faces.o(MyCode)
</UL>
<P><STRONG><a name="[3d]"></a>Number6</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, faces.o(MyCode))
<BR>[Address Reference Count : 1]<UL><LI> faces.o(MyCode)
</UL>
<P><STRONG><a name="[3e]"></a>Number7</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, faces.o(MyCode))
<BR>[Address Reference Count : 1]<UL><LI> faces.o(MyCode)
</UL>
<P><STRONG><a name="[3f]"></a>Number8</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, faces.o(MyCode))
<BR>[Address Reference Count : 1]<UL><LI> faces.o(MyCode)
</UL>
<P><STRONG><a name="[40]"></a>Number9</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, faces.o(MyCode))
<BR>[Address Reference Count : 1]<UL><LI> faces.o(MyCode)
</UL>
<P><STRONG><a name="[41]"></a>Letter_A</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, faces.o(MyCode))
<BR>[Address Reference Count : 1]<UL><LI> faces.o(MyCode)
</UL>
<P><STRONG><a name="[42]"></a>Letter_B</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, faces.o(MyCode))
<BR>[Address Reference Count : 1]<UL><LI> faces.o(MyCode)
</UL>
<P><STRONG><a name="[43]"></a>Letter_C</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, faces.o(MyCode))
<BR>[Address Reference Count : 1]<UL><LI> faces.o(MyCode)
</UL>
<P><STRONG><a name="[44]"></a>Letter_D</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, faces.o(MyCode))
<BR>[Address Reference Count : 1]<UL><LI> faces.o(MyCode)
</UL>
<P><STRONG><a name="[45]"></a>Letter_E</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, faces.o(MyCode))
<BR>[Address Reference Count : 1]<UL><LI> faces.o(MyCode)
</UL>
<P><STRONG><a name="[46]"></a>Letter_F</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, faces.o(MyCode))
<BR>[Address Reference Count : 1]<UL><LI> faces.o(MyCode)
</UL>
<P><STRONG><a name="[47]"></a>Letter_G</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, faces.o(MyCode))
<BR>[Address Reference Count : 1]<UL><LI> faces.o(MyCode)
</UL>
<P><STRONG><a name="[48]"></a>Letter_H</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, faces.o(MyCode))
<BR>[Address Reference Count : 1]<UL><LI> faces.o(MyCode)
</UL>
<P><STRONG><a name="[49]"></a>Letter_I</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, faces.o(MyCode))
<BR>[Address Reference Count : 1]<UL><LI> faces.o(MyCode)
</UL>
<P><STRONG><a name="[4a]"></a>Letter_J</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, faces.o(MyCode))
<BR>[Address Reference Count : 1]<UL><LI> faces.o(MyCode)
</UL>
<P><STRONG><a name="[4b]"></a>Letter_K</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, faces.o(MyCode))
<BR>[Address Reference Count : 1]<UL><LI> faces.o(MyCode)
</UL>
<P><STRONG><a name="[4c]"></a>Letter_L</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, faces.o(MyCode))
<BR>[Address Reference Count : 1]<UL><LI> faces.o(MyCode)
</UL>
<P><STRONG><a name="[4d]"></a>Letter_M</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, faces.o(MyCode))
<BR>[Address Reference Count : 1]<UL><LI> faces.o(MyCode)
</UL>
<P><STRONG><a name="[4e]"></a>Letter_N</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, faces.o(MyCode))
<BR>[Address Reference Count : 1]<UL><LI> faces.o(MyCode)
</UL>
<P><STRONG><a name="[4f]"></a>Letter_O</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, faces.o(MyCode))
<BR>[Address Reference Count : 1]<UL><LI> faces.o(MyCode)
</UL>
<P><STRONG><a name="[50]"></a>Letter_P</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, faces.o(MyCode))
<BR>[Address Reference Count : 1]<UL><LI> faces.o(MyCode)
</UL>
<P><STRONG><a name="[51]"></a>Letter_Q</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, faces.o(MyCode))
<BR>[Address Reference Count : 1]<UL><LI> faces.o(MyCode)
</UL>
<P><STRONG><a name="[52]"></a>Letter_R</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, faces.o(MyCode))
<BR>[Address Reference Count : 1]<UL><LI> faces.o(MyCode)
</UL>
<P><STRONG><a name="[53]"></a>Letter_S</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, faces.o(MyCode))
<BR>[Address Reference Count : 1]<UL><LI> faces.o(MyCode)
</UL>
<P><STRONG><a name="[54]"></a>Letter_T</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, faces.o(MyCode))
<BR>[Address Reference Count : 1]<UL><LI> faces.o(MyCode)
</UL>
<P><STRONG><a name="[90]"></a>waitFlagSets</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, tft_spi.o(MyCode))
<BR><BR>[Called By]<UL><LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clearMultiBits
</UL>

<P><STRONG><a name="[8e]"></a>waitFlagClears</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, tft_spi.o(MyCode))
<BR><BR>[Called By]<UL><LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clearMultiBits
</UL>

<P><STRONG><a name="[8c]"></a>setBit</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, tft_spi.o(MyCode))
<BR><BR>[Called By]<UL><LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clearMultiBits
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SETUP3
</UL>

<P><STRONG><a name="[8d]"></a>setMultiBits</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, tft_spi.o(MyCode))
<BR><BR>[Called By]<UL><LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clearMultiBits
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SETUP3
</UL>

<P><STRONG><a name="[8f]"></a>clearBit</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, tft_spi.o(MyCode))
<BR><BR>[Called By]<UL><LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clearMultiBits
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SETUP3
</UL>

<P><STRONG><a name="[8b]"></a>clearMultiBits</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, tft_spi.o(MyCode))
<BR><BR>[Calls]<UL><LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clearMultiBits
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clearBit
<LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setMultiBits
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setBit
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;waitFlagClears
<LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;waitFlagSets
</UL>
<BR>[Called By]<UL><LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clearMultiBits
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SETUP3
</UL>

<P><STRONG><a name="[55]"></a>Number0</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, tft_spi.o(MyCode))
<BR>[Address Reference Count : 1]<UL><LI> tft_spi.o(MyCode)
</UL>
<P><STRONG><a name="[56]"></a>Number1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, tft_spi.o(MyCode))
<BR>[Address Reference Count : 1]<UL><LI> tft_spi.o(MyCode)
</UL>
<P><STRONG><a name="[57]"></a>Number2</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, tft_spi.o(MyCode))
<BR>[Address Reference Count : 1]<UL><LI> tft_spi.o(MyCode)
</UL>
<P><STRONG><a name="[58]"></a>Number3</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, tft_spi.o(MyCode))
<BR>[Address Reference Count : 1]<UL><LI> tft_spi.o(MyCode)
</UL>
<P><STRONG><a name="[59]"></a>Number4</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, tft_spi.o(MyCode))
<BR>[Address Reference Count : 1]<UL><LI> tft_spi.o(MyCode)
</UL>
<P><STRONG><a name="[5a]"></a>Number5</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, tft_spi.o(MyCode))
<BR>[Address Reference Count : 1]<UL><LI> tft_spi.o(MyCode)
</UL>
<P><STRONG><a name="[5b]"></a>Number6</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, tft_spi.o(MyCode))
<BR>[Address Reference Count : 1]<UL><LI> tft_spi.o(MyCode)
</UL>
<P><STRONG><a name="[5c]"></a>Number7</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, tft_spi.o(MyCode))
<BR>[Address Reference Count : 1]<UL><LI> tft_spi.o(MyCode)
</UL>
<P><STRONG><a name="[5d]"></a>Number8</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, tft_spi.o(MyCode))
<BR>[Address Reference Count : 1]<UL><LI> tft_spi.o(MyCode)
</UL>
<P><STRONG><a name="[5e]"></a>Number9</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, tft_spi.o(MyCode))
<BR>[Address Reference Count : 1]<UL><LI> tft_spi.o(MyCode)
</UL>
<P><STRONG><a name="[5f]"></a>Letter_A</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, tft_spi.o(MyCode))
<BR>[Address Reference Count : 1]<UL><LI> tft_spi.o(MyCode)
</UL>
<P><STRONG><a name="[60]"></a>Letter_B</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, tft_spi.o(MyCode))
<BR>[Address Reference Count : 1]<UL><LI> tft_spi.o(MyCode)
</UL>
<P><STRONG><a name="[61]"></a>Letter_C</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, tft_spi.o(MyCode))
<BR>[Address Reference Count : 1]<UL><LI> tft_spi.o(MyCode)
</UL>
<P><STRONG><a name="[62]"></a>Letter_D</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, tft_spi.o(MyCode))
<BR>[Address Reference Count : 1]<UL><LI> tft_spi.o(MyCode)
</UL>
<P><STRONG><a name="[63]"></a>Letter_E</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, tft_spi.o(MyCode))
<BR>[Address Reference Count : 1]<UL><LI> tft_spi.o(MyCode)
</UL>
<P><STRONG><a name="[64]"></a>Letter_F</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, tft_spi.o(MyCode))
<BR>[Address Reference Count : 1]<UL><LI> tft_spi.o(MyCode)
</UL>
<P><STRONG><a name="[65]"></a>Letter_G</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, tft_spi.o(MyCode))
<BR>[Address Reference Count : 1]<UL><LI> tft_spi.o(MyCode)
</UL>
<P><STRONG><a name="[66]"></a>Letter_H</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, tft_spi.o(MyCode))
<BR>[Address Reference Count : 1]<UL><LI> tft_spi.o(MyCode)
</UL>
<P><STRONG><a name="[67]"></a>Letter_I</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, tft_spi.o(MyCode))
<BR>[Address Reference Count : 1]<UL><LI> tft_spi.o(MyCode)
</UL>
<P><STRONG><a name="[68]"></a>Letter_J</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, tft_spi.o(MyCode))
<BR>[Address Reference Count : 1]<UL><LI> tft_spi.o(MyCode)
</UL>
<P><STRONG><a name="[69]"></a>Letter_K</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, tft_spi.o(MyCode))
<BR>[Address Reference Count : 1]<UL><LI> tft_spi.o(MyCode)
</UL>
<P><STRONG><a name="[6a]"></a>Letter_L</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, tft_spi.o(MyCode))
<BR>[Address Reference Count : 1]<UL><LI> tft_spi.o(MyCode)
</UL>
<P><STRONG><a name="[6b]"></a>Letter_M</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, tft_spi.o(MyCode))
<BR>[Address Reference Count : 1]<UL><LI> tft_spi.o(MyCode)
</UL>
<P><STRONG><a name="[6c]"></a>Letter_N</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, tft_spi.o(MyCode))
<BR>[Address Reference Count : 1]<UL><LI> tft_spi.o(MyCode)
</UL>
<P><STRONG><a name="[6d]"></a>Letter_O</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, tft_spi.o(MyCode))
<BR>[Address Reference Count : 1]<UL><LI> tft_spi.o(MyCode)
</UL>
<P><STRONG><a name="[6e]"></a>Letter_P</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, tft_spi.o(MyCode))
<BR>[Address Reference Count : 1]<UL><LI> tft_spi.o(MyCode)
</UL>
<P><STRONG><a name="[6f]"></a>Letter_Q</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, tft_spi.o(MyCode))
<BR>[Address Reference Count : 1]<UL><LI> tft_spi.o(MyCode)
</UL>
<P><STRONG><a name="[70]"></a>Letter_R</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, tft_spi.o(MyCode))
<BR>[Address Reference Count : 1]<UL><LI> tft_spi.o(MyCode)
</UL>
<P><STRONG><a name="[71]"></a>Letter_S</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, tft_spi.o(MyCode))
<BR>[Address Reference Count : 1]<UL><LI> tft_spi.o(MyCode)
</UL>
<P><STRONG><a name="[72]"></a>Letter_T</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, tft_spi.o(MyCode))
<BR>[Address Reference Count : 1]<UL><LI> tft_spi.o(MyCode)
</UL>
<P><STRONG><a name="[74]"></a>SetSysClock</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, system_stm32f10x.o(.text.SetSysClock))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = SetSysClock &rArr; SetSysClockTo72
</UL>
<BR>[Calls]<UL><LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetSysClockTo72
</UL>
<BR>[Called By]<UL><LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemInit
</UL>

<P><STRONG><a name="[75]"></a>SetSysClockTo72</STRONG> (Thumb, 290 bytes, Stack size 16 bytes, system_stm32f10x.o(.text.SetSysClockTo72))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = SetSysClockTo72
</UL>
<BR>[Called By]<UL><LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetSysClock
</UL>
<P>
<H3>
Undefined Global Symbols
</H3><HR></body></html>
